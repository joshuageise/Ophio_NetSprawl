from metasploit.msfrpc import MsfRpcClient
from subprocess import check_output
from random import randint
from time import sleep

def success_string():
    return "64 bytes from"



def remote_host_scan(client:MsfRpcClient, metasploitSessionNum:int):
    try:
        ipAddress = remote_host_netinfo(client, metasploitSessionNum)[3]
        return ipAddress[3]

    except:
        return -1, "{}"

def remote_host_netinfo(client:MsfRpcClient, metasploitSessionNum:int):
    try:
        shell = client.sessions.session(metasploitSessionNum)
        shell.write("ip a\n")
        sleep(1)
        shell_output = shell.read()
        ips = ip_a_parse(shell_output)
        return 0, ips
    except:
        return -1, "[]"



"""Documentation for the below found in Identifier/networkinfo/ip_a_netinfo"""
def ip_a_regex():
    return r"\d: (.*):.*\n\s*link.* (.*) brd.*\n\s*inet ([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\/[0-9]+) " \
           "(?:brd)? ([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)"

def ip_a_parse(output:str):
    pattern = compile(ip_a_regex())
    matches = pattern.findall(output)
    toReturn = []
    for match in matches:
        toReturn.append(list(match))
    return toReturn
